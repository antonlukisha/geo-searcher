{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\IdeaProjects\\\\lab3\\\\src\\\\main\\\\java\\\\org\\\\example\\\\frontend\\\\src\\\\LocationInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WeatherInfo from './WeatherInfo';\nimport PlacesInfo from './PlacesInfo';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LocationInfo({\n  locations = []\n}) {\n  _s();\n  // Значение по умолчанию\n  const [weatherData, setWeatherData] = useState(null);\n  const [placesData, setPlacesData] = useState(null);\n  const [loadingWeather, setLoadingWeather] = useState(false);\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchWeatherData = async (lat, lng) => {\n    setLoadingWeather(true);\n    setError(null);\n    setWeatherData(null); // Очистка предыдущих данных о погоде\n    try {\n      const response = await fetch(`http://localhost:8080/weather?lat=${lat}&lon=${lng}`);\n      if (!response.ok) {\n        throw new Error('Не удалось получить данные о погоде');\n      }\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error('Ошибка при получении данных о погоде:', error);\n      setError('Не удалось получить данные о погоде. Попробуйте снова.');\n    } finally {\n      setLoadingWeather(false);\n    }\n  };\n  const fetchPlacesData = async (lat, lng) => {\n    setLoadingPlaces(true);\n    setError(null);\n    setPlacesData(null); // Очистка предыдущих данных о местах\n    try {\n      const response = await fetch(`http://localhost:8080/places?lat=${lat}&lon=${lng}`);\n      if (!response.ok) {\n        throw new Error('Не удалось получить данные о местах');\n      }\n      const data = await response.json();\n      setPlacesData(data);\n    } catch (error) {\n      console.error('Ошибка при получении данных о местах:', error);\n      setError('Не удалось получить данные о местах. Попробуйте снова.');\n    } finally {\n      setLoadingPlaces(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(locations) && locations.length > 0 ? locations.map(location => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F: \", location.name, \", \", location.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0428\\u0438\\u0440\\u043E\\u0442\\u0430: \", location.point.lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0414\\u043E\\u043B\\u0433\\u043E\\u0442\\u0430: \", location.point.lng]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchWeatherData(location.point.lat, location.point.lng),\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u043E\\u0433\\u043E\\u0434\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), loadingWeather && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 48\n        }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherInfo, {\n          weather: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchPlacesData(location.point.lat, location.point.lng),\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043C\\u0435\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), loadingPlaces && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043C\\u0435\\u0441\\u0442...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 47\n        }, this), placesData && /*#__PURE__*/_jsxDEV(PlacesInfo, {\n          places: placesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 44\n        }, this)]\n      }, location.osm_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(LocationInfo, \"3LafRwmzGTJOwYUX8K6b7WdQlWI=\");\n_c = LocationInfo;\nexport default LocationInfo;\nvar _c;\n$RefreshReg$(_c, \"LocationInfo\");","map":{"version":3,"names":["React","useState","WeatherInfo","PlacesInfo","jsxDEV","_jsxDEV","LocationInfo","locations","_s","weatherData","setWeatherData","placesData","setPlacesData","loadingWeather","setLoadingWeather","loadingPlaces","setLoadingPlaces","error","setError","fetchWeatherData","lat","lng","response","fetch","ok","Error","data","json","console","fetchPlacesData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","location","name","country","point","onClick","weather","places","osm_id","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Tony/IdeaProjects/lab3/src/main/java/org/example/frontend/src/LocationInfo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport WeatherInfo from './WeatherInfo';\r\nimport PlacesInfo from './PlacesInfo';\r\nimport \"./styles.css\";\r\n\r\nfunction LocationInfo({ locations = [] }) { // Значение по умолчанию\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [placesData, setPlacesData] = useState(null);\r\n    const [loadingWeather, setLoadingWeather] = useState(false);\r\n    const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchWeatherData = async (lat, lng) => {\r\n        setLoadingWeather(true);\r\n        setError(null);\r\n        setWeatherData(null); // Очистка предыдущих данных о погоде\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/weather?lat=${lat}&lon=${lng}`);\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось получить данные о погоде');\r\n            }\r\n            const data = await response.json();\r\n            setWeatherData(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных о погоде:', error);\r\n            setError('Не удалось получить данные о погоде. Попробуйте снова.');\r\n        } finally {\r\n            setLoadingWeather(false);\r\n        }\r\n    };\r\n\r\n    const fetchPlacesData = async (lat, lng) => {\r\n        setLoadingPlaces(true);\r\n        setError(null);\r\n        setPlacesData(null); // Очистка предыдущих данных о местах\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/places?lat=${lat}&lon=${lng}`);\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось получить данные о местах');\r\n            }\r\n            const data = await response.json();\r\n            setPlacesData(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных о местах:', error);\r\n            setError('Не удалось получить данные о местах. Попробуйте снова.');\r\n        } finally {\r\n            setLoadingPlaces(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"location-info\">\r\n            <h2>Локации</h2>\r\n            <ul>\r\n                {Array.isArray(locations) && locations.length > 0 ? (\r\n                    locations.map((location) => (\r\n                        <li key={location.osm_id}>\r\n                            <h3>Локация: {location.name}, {location.country}</h3>\r\n                            <p>Широта: {location.point.lat}</p>\r\n                            <p>Долгота: {location.point.lng}</p>\r\n                            <button onClick={() => fetchWeatherData(location.point.lat, location.point.lng)}>Показать погоду</button>\r\n                            {loadingWeather && <p>Загрузка погоды...</p>}\r\n                            {weatherData && <WeatherInfo weather={weatherData} />}\r\n                            <button onClick={() => fetchPlacesData(location.point.lat, location.point.lng)}>Показать места</button>\r\n                            {loadingPlaces && <p>Загрузка мест...</p>}\r\n                            {placesData && <PlacesInfo places={placesData} />}\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <p>Локации не найдены.</p>\r\n                )}\r\n            </ul>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LocationInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}