{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\IdeaProjects\\\\lab3\\\\src\\\\main\\\\java\\\\org\\\\example\\\\frontend\\\\src\\\\PlacesInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Description from \"./Description\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlacesInfo({\n  places\n}) {\n  _s();\n  const [DescriptionData, setDescriptionData] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchDescription = async id => {\n    setError(null);\n    setDescriptionData(null);\n    if (isOpen) {\n      setIsOpen(false);\n      return;\n    }\n    setIsOpen(true);\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:8080/description?id=${id}`);\n      if (!response.ok) {\n        throw new Error('Не удалось получить данные о погоде');\n      }\n      const data = await response.json();\n      setDescriptionData(data);\n    } catch (error) {\n      console.error('Ошибка при получении данных описания:', error);\n      setError('Не удалось получить данные описания. Попробуйте снова.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"places-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0418\\u043D\\u0442\\u0435\\u0440\\u0435\\u0441\\u043D\\u044B\\u0435 \\u043C\\u0435\\u0441\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: places.features.filter(place => place.properties.name).map(place => /*#__PURE__*/_jsxDEV(\"li\", {}, place.properties.xid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(PlacesInfo, \"FtVP7R6wRMUAo20v6KWwaAR1B48=\");\n_c = PlacesInfo;\nexport default PlacesInfo;\nvar _c;\n$RefreshReg$(_c, \"PlacesInfo\");","map":{"version":3,"names":["React","useState","Description","jsxDEV","_jsxDEV","PlacesInfo","places","_s","DescriptionData","setDescriptionData","isOpen","setIsOpen","loading","setLoading","error","setError","fetchDescription","id","response","fetch","ok","Error","data","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","features","filter","place","properties","name","map","xid","_c","$RefreshReg$"],"sources":["C:/Users/Tony/IdeaProjects/lab3/src/main/java/org/example/frontend/src/PlacesInfo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Description from \"./Description\";\r\nimport \"./styles.css\";\r\n\r\nfunction PlacesInfo({ places }) {\r\n    const [DescriptionData, setDescriptionData] = useState(null);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchDescription = async (id) => {\r\n          setError(null);\r\n          setDescriptionData(null);\r\n          if (isOpen) {\r\n              setIsOpen(false);\r\n              return;\r\n          }\r\n          setIsOpen(true);\r\n          setLoading(true);\r\n          try {\r\n              const response = await fetch(`http://localhost:8080/description?id=${id}`);\r\n              if (!response.ok) {\r\n                  throw new Error('Не удалось получить данные о погоде');\r\n              }\r\n              const data = await response.json();\r\n              setDescriptionData(data);\r\n          } catch (error) {\r\n              console.error('Ошибка при получении данных описания:', error);\r\n              setError('Не удалось получить данные описания. Попробуйте снова.');\r\n          } finally {\r\n              setLoading(false);\r\n          }\r\n    };\r\n    return (\r\n        <div className=\"places-info\">\r\n            <h3>Интересные места</h3>\r\n            <ul>\r\n                {places.features\r\n                    .filter(place => place.properties.name)\r\n                    .map((place) => (\r\n                        <li key={place.properties.xid}>\r\n\r\n                        </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default PlacesInfo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,UAAUA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,gBAAgB,GAAG,MAAOC,EAAE,IAAK;IACjCF,QAAQ,CAAC,IAAI,CAAC;IACdN,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAIC,MAAM,EAAE;MACRC,SAAS,CAAC,KAAK,CAAC;MAChB;IACJ;IACAA,SAAS,CAAC,IAAI,CAAC;IACfE,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwCF,EAAE,EAAE,CAAC;MAC1E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MAC1D;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCd,kBAAkB,CAACa,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZU,OAAO,CAACV,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7DC,QAAQ,CAAC,wDAAwD,CAAC;IACtE,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACN,CAAC;EACD,oBACIT,OAAA;IAAKqB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBtB,OAAA;MAAAsB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB1B,OAAA;MAAAsB,QAAA,EACKpB,MAAM,CAACyB,QAAQ,CACXC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACC,IAAI,CAAC,CACtCC,GAAG,CAAEH,KAAK,iBACP7B,OAAA,WAAS6B,KAAK,CAACC,UAAU,CAACG,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzB,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACvB,EAAA,CA3CQF,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AA6CnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}