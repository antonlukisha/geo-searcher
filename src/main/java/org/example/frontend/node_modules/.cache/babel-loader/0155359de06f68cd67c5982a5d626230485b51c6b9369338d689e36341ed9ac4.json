{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\IdeaProjects\\\\lab3\\\\src\\\\main\\\\java\\\\org\\\\example\\\\frontend\\\\src\\\\LocationInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WeatherInfo from './WeatherInfo';\nimport PlacesInfo from './PlacesInfo';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LocationInfo({\n  locations = []\n}) {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [placesData, setPlacesData] = useState(null);\n  const [loadingWeather, setLoadingWeather] = useState(false);\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\n  const [error, setError] = useState(null);\n  const [openLocation, setOpenLocation] = useState(null); // State to track the currently open location\n\n  const fetchWeatherData = async (lat, lng) => {\n    setLoadingWeather(true);\n    setError(null);\n    setWeatherData(null);\n    try {\n      const response = await fetch(`http://localhost:8080/weather?lat=${lat}&lon=${lng}`);\n      if (!response.ok) {\n        throw new Error('Не удалось получить данные о погоде');\n      }\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error('Ошибка при получении данных о погоде:', error);\n      setError('Не удалось получить данные о погоде. Попробуйте снова.');\n    } finally {\n      setLoadingWeather(false);\n    }\n  };\n  const fetchPlacesData = async (lat, lng) => {\n    setLoadingPlaces(true);\n    setError(null);\n    setPlacesData(null);\n    try {\n      const response = await fetch(`http://localhost:8080/places?lat=${lat}&lon=${lng}`);\n      if (!response.ok) {\n        throw new Error('Не удалось получить данные о местах');\n      }\n      const data = await response.json();\n      setPlacesData(data);\n    } catch (error) {\n      console.error('Ошибка при получении данных о местах:', error);\n      setError('Не удалось получить данные о местах. Попробуйте снова.');\n    } finally {\n      setLoadingPlaces(false);\n    }\n  };\n  const toggleLocationDetails = location => {\n    if (openLocation && openLocation.osm_id === location.osm_id) {\n      // If the clicked location is already open, close it\n      setOpenLocation(null);\n      setWeatherData(null);\n      setPlacesData(null);\n    } else {\n      // Open the new location and fetch its data\n      setOpenLocation(location);\n      fetchWeatherData(location.point.lat, location.point.lng);\n      fetchPlacesData(location.point.lat, location.point.lng);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(locations) && locations.length > 0 ? locations.map(location => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => toggleLocationDetails(location),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [\"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F: \", location.name, \", \", location.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), openLocation && openLocation.osm_id === location.osm_id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0428\\u0438\\u0440\\u043E\\u0442\\u0430: \", location.point.lat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0414\\u043E\\u043B\\u0433\\u043E\\u0442\\u0430: \", location.point.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this), loadingWeather && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 56\n          }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherInfo, {\n            weather: weatherData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 53\n          }, this), loadingPlaces && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043C\\u0435\\u0441\\u0442...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 55\n          }, this), placesData && /*#__PURE__*/_jsxDEV(PlacesInfo, {\n            places: placesData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this)]\n      }, location.osm_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(LocationInfo, \"sPdQObq9QeX+l45GbQa4pw/sBR0=\");\n_c = LocationInfo;\nexport default LocationInfo;\nvar _c;\n$RefreshReg$(_c, \"LocationInfo\");","map":{"version":3,"names":["React","useState","WeatherInfo","PlacesInfo","jsxDEV","_jsxDEV","LocationInfo","locations","_s","weatherData","setWeatherData","placesData","setPlacesData","loadingWeather","setLoadingWeather","loadingPlaces","setLoadingPlaces","error","setError","openLocation","setOpenLocation","fetchWeatherData","lat","lng","response","fetch","ok","Error","data","json","console","fetchPlacesData","toggleLocationDetails","location","osm_id","point","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","onClick","style","cursor","name","country","weather","places","color","_c","$RefreshReg$"],"sources":["C:/Users/Tony/IdeaProjects/lab3/src/main/java/org/example/frontend/src/LocationInfo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport WeatherInfo from './WeatherInfo';\r\nimport PlacesInfo from './PlacesInfo';\r\nimport './styles.css';\r\n\r\nfunction LocationInfo({ locations = [] }) {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [placesData, setPlacesData] = useState(null);\r\n    const [loadingWeather, setLoadingWeather] = useState(false);\r\n    const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [openLocation, setOpenLocation] = useState(null); // State to track the currently open location\r\n\r\n    const fetchWeatherData = async (lat, lng) => {\r\n        setLoadingWeather(true);\r\n        setError(null);\r\n        setWeatherData(null);\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/weather?lat=${lat}&lon=${lng}`);\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось получить данные о погоде');\r\n            }\r\n            const data = await response.json();\r\n            setWeatherData(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных о погоде:', error);\r\n            setError('Не удалось получить данные о погоде. Попробуйте снова.');\r\n        } finally {\r\n            setLoadingWeather(false);\r\n        }\r\n    };\r\n\r\n    const fetchPlacesData = async (lat, lng) => {\r\n        setLoadingPlaces(true);\r\n        setError(null);\r\n        setPlacesData(null);\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/places?lat=${lat}&lon=${lng}`);\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось получить данные о местах');\r\n            }\r\n            const data = await response.json();\r\n            setPlacesData(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных о местах:', error);\r\n            setError('Не удалось получить данные о местах. Попробуйте снова.');\r\n        } finally {\r\n            setLoadingPlaces(false);\r\n        }\r\n    };\r\n\r\n    const toggleLocationDetails = (location) => {\r\n        if (openLocation && openLocation.osm_id === location.osm_id) {\r\n            // If the clicked location is already open, close it\r\n            setOpenLocation(null);\r\n            setWeatherData(null);\r\n            setPlacesData(null);\r\n        } else {\r\n            // Open the new location and fetch its data\r\n            setOpenLocation(location);\r\n            fetchWeatherData(location.point.lat, location.point.lng);\r\n            fetchPlacesData(location.point.lat, location.point.lng);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"location-info\">\r\n            <h1>Локации</h1>\r\n            <ul>\r\n                {Array.isArray(locations) && locations.length > 0 ? (\r\n                    locations.map((location) => (\r\n                        <li key={location.osm_id}>\r\n                            <h2 onClick={() => toggleLocationDetails(location)} style={{ cursor: 'pointer' }}>\r\n                                Локация: {location.name}, {location.country}\r\n                            </h2>\r\n                            {openLocation && openLocation.osm_id === location.osm_id && (\r\n                                <div>\r\n                                    <p>Широта: {location.point.lat}</p>\r\n                                    <p>Долгота: {location.point.lng}</p>\r\n                                    {loadingWeather && <p>Загрузка погоды...</p>}\r\n                                    {weatherData && <WeatherInfo weather={weatherData} />}\r\n                                    {loadingPlaces && <p>Загрузка мест...</p>}\r\n                                    {placesData && <PlacesInfo places={placesData} />}\r\n                                </div>\r\n                            )}\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <p>Локации не найдены.</p>\r\n                )}\r\n            </ul>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LocationInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}