{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony\\\\IdeaProjects\\\\lab3\\\\src\\\\main\\\\java\\\\org\\\\example\\\\frontend\\\\src\\\\Info.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WeatherInfo from './WeatherInfo';\nimport PlacesInfo from './PlacesInfo';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Info({\n  location\n}) {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [placesData, setPlacesData] = useState(null);\n  const [loadingWeather, setLoadingWeather] = useState(false);\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\n  const [isOpenWeather, setIsOpenWeather] = useState(false);\n  const [isOpenPlaces, setIsOpenPlaces] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchWeatherData = async (lat, lng) => {\n    setError(null);\n    setWeatherData(null);\n    if (isOpenWeather) {\n      setIsOpenWeather(false);\n      return;\n    }\n    setIsOpenWeather(true);\n    setLoadingWeather(true);\n    try {\n      const response = await fetch(`http://localhost:8080/weather?lat=${lat}&lon=${lng}`);\n      if (!response.ok) {\n        throw new Error('Не удалось получить данные о погоде');\n      }\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error('Ошибка при получении данных о погоде:', error);\n      setError('Не удалось получить данные о погоде. Попробуйте снова.');\n    } finally {\n      setLoadingWeather(false);\n    }\n  };\n  const fetchPlacesData = async (lat, lng) => {\n    setError(null);\n    setPlacesData(null);\n    if (isOpenPlaces) {\n      setIsOpenPlaces(false);\n      return;\n    }\n    setIsOpenPlaces(true);\n    setLoadingPlaces(true);\n    try {\n      const response = await fetch(`http://localhost:8080/places?lat=${lat}&lon=${lng}`);\n      if (!response.ok) {\n        throw new Error('Не удалось получить данные о местах');\n      }\n      const data = await response.json();\n      setPlacesData(data);\n    } catch (error) {\n      console.error('Ошибка при получении данных о местах:', error);\n      setError('Не удалось получить данные о местах. Попробуйте снова.');\n    } finally {\n      setLoadingPlaces(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchWeatherData(location.point.lat, location.point.lng),\n      children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u043E\\u0433\\u043E\\u0434\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), loadingWeather && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 32\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherInfo, {\n      weather: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchPlacesData(location.point.lat, location.point.lng),\n      children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043C\\u0435\\u0441\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), loadingPlaces && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043C\\u0435\\u0441\\u0442...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 31\n    }, this), placesData && /*#__PURE__*/_jsxDEV(PlacesInfo, {\n      places: placesData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n_s(Info, \"eWCrKuDk0BQgUFzBSeVhcsqSYSs=\");\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useState","WeatherInfo","PlacesInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","Info","location","_s","weatherData","setWeatherData","placesData","setPlacesData","loadingWeather","setLoadingWeather","loadingPlaces","setLoadingPlaces","isOpenWeather","setIsOpenWeather","isOpenPlaces","setIsOpenPlaces","error","setError","fetchWeatherData","lat","lng","response","fetch","ok","Error","data","json","console","fetchPlacesData","children","onClick","point","fileName","_jsxFileName","lineNumber","columnNumber","weather","places","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Tony/IdeaProjects/lab3/src/main/java/org/example/frontend/src/Info.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport WeatherInfo from './WeatherInfo';\r\nimport PlacesInfo from './PlacesInfo';\r\nimport \"./styles.css\";\r\n\r\nfunction Info({ location }) {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [placesData, setPlacesData] = useState(null);\r\n    const [loadingWeather, setLoadingWeather] = useState(false);\r\n    const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n    const [isOpenWeather, setIsOpenWeather] = useState(false);\r\n    const [isOpenPlaces, setIsOpenPlaces] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchWeatherData = async (lat, lng) => {\r\n        setError(null);\r\n        setWeatherData(null);\r\n        if (isOpenWeather) {\r\n            setIsOpenWeather(false);\r\n            return;\r\n        }\r\n        setIsOpenWeather(true);\r\n        setLoadingWeather(true);\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/weather?lat=${lat}&lon=${lng}`);\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось получить данные о погоде');\r\n            }\r\n            const data = await response.json();\r\n            setWeatherData(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных о погоде:', error);\r\n            setError('Не удалось получить данные о погоде. Попробуйте снова.');\r\n        } finally {\r\n            setLoadingWeather(false);\r\n        }\r\n    };\r\n\r\n    const fetchPlacesData = async (lat, lng) => {\r\n        setError(null);\r\n        setPlacesData(null);\r\n        if (isOpenPlaces) {\r\n            setIsOpenPlaces(false);\r\n            return;\r\n        }\r\n        setIsOpenPlaces(true);\r\n        setLoadingPlaces(true);\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/places?lat=${lat}&lon=${lng}`);\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось получить данные о местах');\r\n            }\r\n            const data = await response.json();\r\n            setPlacesData(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных о местах:', error);\r\n            setError('Не удалось получить данные о местах. Попробуйте снова.');\r\n        } finally {\r\n            setLoadingPlaces(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => fetchWeatherData(location.point.lat, location.point.lng)}>Показать погоду</button>\r\n            {loadingWeather && <p>Загрузка погоды...</p>}\r\n            {weatherData && <WeatherInfo weather={weatherData} />}\r\n            <button onClick={() => fetchPlacesData(location.point.lat, location.point.lng)}>Показать места</button>\r\n            {loadingPlaces && <p>Загрузка мест...</p>}\r\n            {placesData && <PlacesInfo places={placesData} />}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Info;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}